{"version":3,"sources":["../../../src/js/mainApp.js"],"names":["Colors","window","Promise","DATE_FORMAT","App","state","apiRoot","queryTopic","pushedOperator","pushedDate","defaultDateParam","startDate","sortField","sortOrder","queryResults","resultCount","rateExceeded","infoFields","name","desc","navLinks","first","next","last","prev","getAppData","bind","getQuery","getInfoFieldElements","onDateChange","onPageButtonClick","parseLinkHeaders","fetch","headers","method","then","res","status","pages","linkHeaders","get","links","split","newNavLinks","setState","json","items","total_count","error","link","indexOf","dayOfYear","event","date","newDate","searchQuery","length","search","decodeURIComponent","replace","substring","format","repo","index","map","infoField","infoFieldIndex","appView","queryResult","GithubRepo","props","repoIndex","owner","avatar_url","RepoInfo","full_name","pathname","homepage","AppToolbar","toDate","Paginator","PaginationLink","handleClick","pagingLink","render","document","getElementById"],"mappings":"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","file":"mainApp.js","sourcesContent":["import \"babel-polyfill\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link, Switch, withRouter } from 'react-router-dom';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport {Card, CardTitle, CardText, CardActions, CardHeader } from 'material-ui/Card';\nimport Paper from 'material-ui/Paper';\nimport {List, ListItem} from 'material-ui/List';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\nimport lightBaseTheme from 'material-ui/styles/baseThemes/lightBaseTheme'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport {Toolbar, ToolbarGroup, ToolbarTitle} from 'material-ui/Toolbar';\nimport {GridList, GridTile} from 'material-ui/GridList';\nimport {Table, TableBody, TableRow, TableRowColumn} from 'material-ui/Table';\nimport FontIcon from 'material-ui/FontIcon';\nimport IconButton from 'material-ui/IconButton';\nimport DatePicker from 'material-ui/DatePicker';\nimport * as Colors from 'material-ui/styles/colors';\nimport moment from 'moment';\nimport Promise from 'promise-polyfill';\nimport 'whatwg-fetch';\n\nif (!window.Promise) {\n  window.Promise = Promise;\n}\n\ninjectTapEventPlugin();\n\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\n/*\nApplication to query and return recently updated Github repos\n*/\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            apiRoot: 'https://api.github.com/search/repositories',\n            queryTopic: 'vuejs',\n            pushedOperator: '>=',\n            pushedDate: this.defaultDateParam(),\n            startDate : this.defaultDateParam(),\n            sortField : '',\n            sortOrder: '',\n            queryResults: [],\n            resultCount: 0,\n            rateExceeded: false,\n            //Very simple object array for the info fields.\n            //Objects could provide a formatting function to make the dates look nice etc.\n            infoFields: [\n                {\n                    name : 'score',\n                    desc : 'Score'\n                },\n                {\n                    name : 'open_issues',\n                    desc : 'Issues'\n                },\n                {\n                    name : 'created_at',\n                    desc : 'Created'\n                },\n                {\n                    name : 'pushed_at',\n                    desc : 'Updated'     \n                },\n                {\n                    name : 'watchers',\n                    desc : 'Watchers'                    \n                }\n            ],\n            navLinks: {\n                first: '',\n                next: '',\n                last: '',\n                prev: ''\n            }\n        };\n        \n        //Bind the functions we'll be using\n        this.getAppData = this.getAppData.bind(this);\n        this.getQuery = this.getQuery.bind(this);\n        this.getInfoFieldElements = this.getInfoFieldElements.bind(this);\n        this.defaultDateParam = this.defaultDateParam.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n        this.onPageButtonClick = this.onPageButtonClick.bind(this);\n        this.parseLinkHeaders = this.parseLinkHeaders.bind(this);\n        \n    }\n    \n    getAppData() {\n        //Get the data from the API once the component has mounted\n        fetch(this.getQuery(),\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"GET\"\n            }).then( res => {\n                //If we're ok, parse paging links from the link header and the\n                //json results\n                if ( res.status === 200 ) {\n                    let pages = [];\n                    let linkHeaders = res.headers.get('link');\n                    if ( linkHeaders ) {\n                        let links = linkHeaders.split(',');\n                        this.parseLinkHeaders(links);\n                    } else {\n                        let newNavLinks = {first: '', next: '', last: '', prev: ''}\n                        this.setState({navLinks:newNavLinks});\n                    }\n                    \n                    res.json().then(\n                        res => {\n                            if (res.items) {\n                                this.setState({queryResults: res.items, resultCount: res.total_count, rateExceeded: false});\n                            }\n                        }\n                    );\n                //Otherwise, something's gone wrong. For simplicity we'll assumer it's a rate limit,\n                //but normally we'd analyse the status a bit further\n                } else {\n                    this.setState({rateExceeded: true});\n                }\n            }, function (error) {\n                //Again we'll assume we've tripped the rate limit and set the error panel\n                this.setState({rateExceeded: true});\n            }\n        );                \n    }\n    \n    //Sort out the links in the link header so we can present them in order\n    parseLinkHeaders(links) {\n        let newNavLinks = {};\n\n        for (let link of links) {\n            if ( link.indexOf('next') != -1 ) {\n                newNavLinks['next'] = link;\n            } else if ( link.indexOf('last') != -1) {\n                newNavLinks['last'] = link;\n            } else if ( link.indexOf('prev') != -1) {\n                newNavLinks['prev'] = link;\n            } else if ( link.indexOf('first') != -1) {\n                newNavLinks['first'] = link;\n            }\n        }    \n        \n        this.setState({navLinks:newNavLinks});\n    }\n    \n    //Return the default start date of the query, i.e. 7 days ago\n    defaultDateParam() {\n        let startDate = moment();\n        startDate.dayOfYear(startDate.dayOfYear() - 7);\n        return startDate;\n    }\n    \n    //Function to handle datepicker clicks. Updates the start date and triggers\n    //a submit\n    onDateChange(event, date) {\n        let newDate = moment(date);\n        this.setState({startDate: newDate, searchQuery: {}}, function() {\n           this.getAppData(); \n        });\n    }\n    \n    //Function to handle the paging link clicks. Updates the search query with the\n    //query from the link header and triggers a submit\n    onPageButtonClick(link) {\n        this.setState({searchQuery:link}, function() {\n           this.getAppData(); \n        });\n    }\n    \n    //Composes and returns the query we'll pass to the GitHub API\n    getQuery() {\n        if (this.state.searchQuery && this.state.searchQuery.length > 0) {\n            let search = decodeURIComponent(this.state.searchQuery);\n            search = search.replace('<', '').substring(0, search.indexOf('>;') - 1);\n            return search;\n        } else {\n            //Query example : https://api.github.com/search/repositories?q=topic:vuejs+pushed:>=2017-12-01&sort=updated&order=desc\n            return this.state.apiRoot + '?q=topic:' + this.state.queryTopic \n                + '+pushed:' + this.state.pushedOperator + this.state.startDate.format(DATE_FORMAT)\n                + '&' + this.state.sortField + '&' + this.state.sortOrder;\n        }\n    }\n    \n    //Returns a ListItem containing the info fields we want to display, e.g. updated date, open issues\n    //This could (or maybe should) be a Component, but the nestedItems prop of the ListItem in the GithubRepo component\n    //wanted an array so it seemed more convenient to do it like this\n    getInfoFieldElements(repo, infoFields, index) {\n        return [<Table key={'info-table' + index} children={<TableBody key={'info-table-body' + index} displayRowCheckbox={false} children={\n            infoFields.map(\n                (infoField) => {\n                    //Get the info field index here since we'll need it for keys below\n                    let infoFieldIndex = infoFields.indexOf(infoField);\n                    return(   \n                        <TableRow key={'info-table-' + index + '-row-' + infoFieldIndex} displayBorder={true} children={[\n                            <TableRowColumn key={'info-table-' + index + '-row-' + infoFieldIndex + 'col-0'}>{infoField.desc}</TableRowColumn>,\n                            <TableRowColumn key={'info-table-' + index + '-row-' + infoFieldIndex + 'col-1'}>{repo[infoField.name]}</TableRowColumn>\n                        ]}/>\n                    )\n                }\n            )\n        }/> }/>]        \n    }\n    \n    componentDidMount() {\n        this.getAppData();\n    }\n    \n    render() {\n        \n        //Conditionally return either the app view or an error element if the rate limit has tripped\n        let appView;\n        \n        if ( this.state.rateExceeded ) {\n            //This is fugly but at least it gets the message across.\n            appView = <span key='rate-limit-error'>Rate Limit exceeded. Please try again in a minute.</span>;\n        } else {\n            appView =\n            <div key='appViewDiv'>\n                <GridList key='resultsGrid' cellHeight={'auto'} children={[\n                                this.state.queryResults.map( \n                                    (queryResult) => {\n                                        return <GithubRepo repo={queryResult} repoIndex={this.state.queryResults.indexOf(queryResult)} infoFields={this.state.infoFields} getInfoFieldElements={this.getInfoFieldElements} />\n                                    }\n                                )\n                        ]}/>\n            </div>;\n        }        \n        \n        return(\n            <div className=\"mainApp\">\n                <BrowserRouter baseName='/'>\n                    <MuiThemeProvider muiTheme={getMuiTheme(lightBaseTheme)}>\n                        <Paper children={[\n                            <AppToolbar key='appToolbar-root' startDate={this.state.startDate} \n                                onDateChange={this.onDateChange} resultCount={this.state.resultCount} \n                                navLinks={this.state.navLinks} onPageButtonClick={this.onPageButtonClick}\n                            />,\n                            appView\n                        ]}/>\n                    </MuiThemeProvider>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\n//Top Level component representing a single GitHub repo\nclass GithubRepo extends Component {\n    constructor() {\n        super();\n    }\n    \n    render() {\n        return(\n            <ListItem className='repo' key={'github-repo-' + this.props.repoIndex } \n                leftAvatar={<img src={this.props.repo.owner.avatar_url} height={20}/>} \n                nestedItems={this.props.getInfoFieldElements(this.props.repo, this.props.infoFields, this.props.repoIndex)}\n                children={<RepoInfo repo={this.props.repo} \n                key={'github-repo-info-' + this.props.repoIndex} repoIndex={this.props.repoIndex} /> }\n            />\n        )\n    }\n}\n\n//Component for basic information about the Repo, e.g. name, homepage\nclass RepoInfo extends Component {\n    constructor() {\n        super();\n    }\n    \n    render() {\n        return(\n            <div key='repo-info-div'>\n                <div className='repo-name'>\n                    <span key='repo-info-name'><big><strong>{this.props.repo.name}</strong></big>&nbsp;<small>{this.props.repo.full_name}</small></span>\n                </div>\n                <div key='repo-info-homepage' className='repo-homepage'>\n                    <Link to={{pathname: this.props.repo.homepage}}>{this.props.repo.homepage}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\n//Toolbar containing total item count, paging (nav) links and date picker\nclass AppToolbar extends Component {\n    constructor() {\n        super();\n    }\n    \n    render() {\n        return(\n            <Toolbar key='appToolbar'>\n                <ToolbarGroup>\n                    <ToolbarTitle text='GitVue'/>\n                </ToolbarGroup>\n                <ToolbarGroup>\n                    <div>\n                        <span>{this.props.resultCount} repositories found.</span>\n                    </div>\n                    <div>\n                        <Paginator navLinks={this.props.navLinks} onPageButtonClick={this.props.onPageButtonClick}/>\n                    </div>\n                </ToolbarGroup>\n                <ToolbarGroup>\n                    <div>\n                        <label>from&nbsp;</label>\n                    </div>\n                    <div>\n                        <DatePicker key='toolbar-datepicker' id='toolbar-datepicker' defaultDate={this.props.startDate.toDate()} onChange={this.props.onDateChange} autoOk={true}/>\n                    </div>\n                </ToolbarGroup>\n            </Toolbar>            \n        )\n    }\n}\n\n//Container for the paging links\nclass Paginator extends Component {\n    constructor() {\n        super();\n    }\n    \n    render() {\n        return(\n            <div key='paginator'>\n                <PaginationLink link={this.props.navLinks['first']} onPageButtonClick={this.props.onPageButtonClick} />\n                <PaginationLink link={this.props.navLinks['prev']} onPageButtonClick={this.props.onPageButtonClick} />\n                <PaginationLink link={this.props.navLinks['next']} onPageButtonClick={this.props.onPageButtonClick} /> \n                <PaginationLink link={this.props.navLinks['last']} onPageButtonClick={this.props.onPageButtonClick} /> \n            </div>\n        )\n    }\n}\n\n//Individual paging link component\nclass PaginationLink extends Component {\n    constructor() {\n        super();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    \n    handleClick() {\n        this.props.onPageButtonClick(this.props.link);\n    }\n    \n    render() {\n        let pagingLink = <span>&nbsp;</span>;\n        \n        if (!this.props.link) {\n            return pagingLink;\n        }\n        \n        if ( this.props.link.indexOf('next') != -1 ) {\n            pagingLink = <IconButton iconClassName='fa fa-chevron-right' onClick={this.handleClick}/>;\n        } else if ( this.props.link.indexOf('last') != -1) {\n            pagingLink = <IconButton iconClassName='fa fa-step-forward' onClick={this.handleClick}/>;\n        } else if ( this.props.link.indexOf('prev') != -1) {\n            pagingLink = <IconButton iconClassName='fa fa-chevron-left' onClick={this.handleClick}/>;\n        } else if ( this.props.link.indexOf('first') != -1) {\n            pagingLink = <IconButton iconClassName='fa fa-step-backward' onClick={this.handleClick}/>;\n        }  \n        \n        return pagingLink;\n    }\n}\n\n//This renders the app into the containing element defined in the html file.\nReactDOM.render(\n    <App key='gitvue-app'/>,\n    document.getElementById( 'root' )\n);\n"]}